/* Generated by Yosys 0.48+45 (git sha1 1ef4c7f56, g++ 12.2.0-14 -fPIC -O3) */

(* src = "../src/spi_mem.sv:22.1-49.10" *)
module spi_mem(data_out, clk, add, data_in, rwb, rstn);
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [2047:0] _00_;
  wire _01_;
  wire _02_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [32:0] _03_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [2047:0] _04_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [2047:0] _05_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [2047:0] _06_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [2047:0] _07_;
  (* src = "../src/spi_mem.sv:0.0-0.0" *)
  wire [15:0] _08_;
  (* src = "../src/spi_mem.sv:29.16-29.19" *)
  input [6:0] add;
  wire [6:0] add;
  (* src = "../src/spi_mem.sv:28.10-28.13" *)
  input clk;
  wire clk;
  (* src = "../src/spi_mem.sv:30.17-30.24" *)
  input [15:0] data_in;
  wire [15:0] data_in;
  (* src = "../src/spi_mem.sv:31.22-31.30" *)
  output [15:0] data_out;
  reg [15:0] data_out;
  (* src = "../src/spi_mem.sv:35.24-35.27" *)
  reg [2047:0] mem;
  (* src = "../src/spi_mem.sv:33.10-33.14" *)
  input rstn;
  wire rstn;
  (* src = "../src/spi_mem.sv:32.10-32.13" *)
  input rwb;
  wire rwb;
  assign _00_ = mem & (* src = "../src/spi_mem.sv:0.0-0.0" *) _04_;
  (* src = "../src/spi_mem.sv:37.4-47.7" *)
  always_ff @(posedge clk)
    if (!rstn) data_out <= 16'h0000;
    else if (rwb) data_out <= _08_;
  (* src = "../src/spi_mem.sv:37.4-47.7" *)
  always_ff @(posedge clk)
    if (_01_) mem <= _05_;
  assign _02_ = ~ rwb;
  assign _01_ = & { _02_, rstn };
  assign _03_ = - (* src = "../src/spi_mem.sv:0.0-0.0" *) $signed({ 22'h000000, add, 4'h0 });
  assign _04_ = ~ (* src = "../src/spi_mem.sv:0.0-0.0" *) _06_;
  assign _05_ = _00_ | (* src = "../src/spi_mem.sv:0.0-0.0" *) _07_;
  assign _06_ = $signed(_03_) < 0 ? 16'hffff << - _03_ : 16'hffff >> _03_;
  assign _07_ = $signed(_03_) < 0 ? data_in << - _03_ : data_in >> _03_;
  wire [2047:0] _20_ = mem;
  assign _08_ = _20_[$signed({ 21'h000000, add, 4'h0 }) +: 16];
endmodule

(* top =  1  *)
(* src = "../src/spi_slave.sv:20.1-216.10" *)
module spi_slave(sdo, clk, reset_n, sclk, sdi, csz);
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  wire [6:0] _000_;
  (* src = "../src/spi_slave.sv:174.4-213.7" *)
  wire [3:0] _001_;
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  wire _002_;
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  wire _003_;
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  wire _004_;
  (* src = "../src/spi_slave.sv:174.4-213.7" *)
  wire [15:0] _005_;
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  wire [2:0] _006_;
  (* src = "../src/spi_slave.sv:183.19-183.33" *)
  wire [3:0] _007_;
  (* src = "../src/spi_slave.sv:100.11-100.51" *)
  wire _008_;
  (* src = "../src/spi_slave.sv:141.11-141.52" *)
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  (* src = "../src/spi_slave.sv:100.12-100.23" *)
  wire _027_;
  (* src = "../src/spi_slave.sv:100.28-100.50" *)
  wire _028_;
  (* src = "../src/spi_slave.sv:135.24-135.39" *)
  wire _029_;
  (* src = "../src/spi_slave.sv:141.12-141.27" *)
  wire _030_;
  (* src = "../src/spi_slave.sv:141.32-141.51" *)
  wire _031_;
  (* src = "../src/spi_slave.sv:150.20-150.34" *)
  wire _032_;
  (* src = "../src/spi_slave.sv:185.27-185.39" *)
  wire _033_;
  wire [2:0] _034_;
  wire [2:0] _035_;
  wire _036_;
  wire [2:0] _037_;
  wire _038_;
  wire [2:0] _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire [6:0] _044_;
  wire [3:0] _045_;
  wire _046_;
  wire [2:0] _047_;
  wire [2:0] _048_;
  (* src = "../src/spi_slave.sv:104.23-104.42" *)
  wire _049_;
  (* src = "../src/spi_slave.sv:135.23-135.54" *)
  wire _050_;
  (* src = "../src/spi_slave.sv:150.19-150.49" *)
  wire _051_;
  (* src = "../src/spi_slave.sv:185.26-185.54" *)
  wire _052_;
  (* src = "../src/spi_slave.sv:55.17-55.20" *)
  reg [6:0] add;
  (* src = "../src/spi_slave.sv:45.10-45.24" *)
  reg add_fetch_done;
  (* src = "../src/spi_slave.sv:26.10-26.13" *)
  input clk;
  wire clk;
  (* src = "../src/spi_slave.sv:41.16-41.23" *)
  reg [3:0] counter;
  (* src = "../src/spi_slave.sv:30.10-30.13" *)
  input csz;
  wire csz;
  (* src = "../src/spi_slave.sv:56.18-56.25" *)
  reg [15:0] data_in;
  (* src = "../src/spi_slave.sv:50.18-50.26" *)
  wire [15:0] data_out;
  (* src = "../src/spi_slave.sv:44.10-44.21" *)
  reg mem_op_done;
  (* src = "../src/spi_slave.sv:27.10-27.17" *)
  input reset_n;
  wire reset_n;
  (* src = "../src/spi_slave.sv:59.11-59.15" *)
  wire rstn;
  (* src = "../src/spi_slave.sv:57.11-57.14" *)
  reg rwb;
  (* src = "../src/spi_slave.sv:28.10-28.14" *)
  input sclk;
  wire sclk;
  (* src = "../src/spi_slave.sv:29.10-29.13" *)
  input sdi;
  wire sdi;
  (* src = "../src/spi_slave.sv:31.17-31.20" *)
  output sdo;
  reg sdo;
  (* src = "../src/spi_slave.sv:42.17-42.30" *)
  reg [15:0] serial_buffer;
  (* src = "../src/spi_slave.sv:43.16-43.21" *)
  reg [2:0] state;
  assign _007_ = counter + (* src = "../src/spi_slave.sv:206.19-206.33" *) 1'h1;
  assign _008_ = _027_ & (* src = "../src/spi_slave.sv:100.11-100.51" *) _028_;
  assign _009_ = _030_ & (* src = "../src/spi_slave.sv:157.11-157.52" *) _031_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) add_fetch_done <= 1'h0;
    else if (_018_) add_fetch_done <= _049_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) rwb <= 1'h0;
    else if (_010_) rwb <= _003_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) sdo <= 1'h1;
    else if (_019_) sdo <= _004_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:174.4-213.7" *)
  always_ff @(posedge sclk)
    if (_020_) add_fetch_done <= _052_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) data_in <= 16'h0000;
    else if (_021_) data_in <= serial_buffer;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) state <= 3'h0;
    else if (_013_) state <= _006_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk, negedge reset_n)
    if (!reset_n) mem_op_done <= 1'h0;
    else if (_014_) mem_op_done <= _002_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:174.4-213.7" *)
  always_ff @(posedge sclk, negedge reset_n)
    if (!reset_n) counter <= 4'h0;
    else if (_015_) counter <= _001_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:72.4-171.7" *)
  always_ff @(posedge clk)
    if (_022_) add <= _000_;
  (* \always_ff  = 32'd1 *)
  (* src = "../src/spi_slave.sv:174.4-213.7" *)
  always_ff @(posedge sclk, negedge reset_n)
    if (!reset_n) serial_buffer <= 16'h0000;
    else if (_017_) serial_buffer <= _005_;
  assign _010_ = | { _040_, _036_ };
  assign _011_ = { _042_, _009_ } != 2'h3;
  assign _012_ = | { _040_, _042_ };
  assign _013_ = | { _040_, _038_, _043_, _036_, _042_ };
  assign _014_ = | { _040_, _043_, _036_, _042_ };
  assign _015_ = | { _023_, _036_ };
  assign _016_ = | { _040_, _038_ };
  assign _017_ = | { _024_, _036_, _042_ };
  assign _026_ = ~ _008_;
  assign _018_ = & { _040_, _026_ };
  assign _019_ = & { _012_, _011_ };
  assign _020_ = & { _038_, reset_n };
  assign _021_ = & { _043_, _009_ };
  assign _022_ = & { _016_, reset_n };
  assign _023_ = | { _043_, _042_, _038_ };
  assign _024_ = | { _043_, _038_ };
  assign _025_ = | { _043_, _042_ };
  assign _027_ = ~ (* src = "../src/spi_slave.sv:100.12-100.23" *) csz;
  assign _028_ = ~ (* src = "../src/spi_slave.sv:100.28-100.50" *) add_fetch_done;
  assign _030_ = ! (* src = "../src/spi_slave.sv:157.12-157.27" *) counter;
  assign _031_ = ~ (* src = "../src/spi_slave.sv:157.32-157.51" *) mem_op_done;
  assign _032_ = counter == (* src = "../src/spi_slave.sv:165.20-165.34" *) 4'hf;
  assign _033_ = counter == (* src = "../src/spi_slave.sv:185.27-185.39" *) 4'h6;
  assign _029_ = counter == (* src = "../src/spi_slave.sv:191.12-191.27" *) 4'h7;
  assign _034_ = rwb ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:127.7-127.18|../src/spi_slave.sv:127.4-131.7" *) 3'h5 : 3'h4;
  assign _035_ = mem_op_done ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:126.11-126.22|../src/spi_slave.sv:126.8-134.11" *) _034_ : 3'h3;
  assign _037_ = add_fetch_done ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:110.11-110.33|../src/spi_slave.sv:110.8-118.11" *) 3'h3 : 3'h2;
  assign _039_ = _008_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:100.11-100.51|../src/spi_slave.sv:100.8-105.11" *) 3'h2 : 3'h0;
  assign _041_ = _009_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:141.11-141.52|../src/spi_slave.sv:141.8-151.11" *) 1'hx : serial_buffer[15];
  function [0:0] _095_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _095_ = b[0:0];
      2'b1?:
        _095_ = b[1:1];
      default:
        _095_ = a;
    endcase
  endfunction
  assign _004_ = _095_(1'hx, { 1'h1, _041_ }, { _040_, _042_ });
  assign _042_ = state == (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *) 3'h5;
  function [0:0] _097_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _097_ = b[0:0];
      2'b1?:
        _097_ = b[1:1];
      default:
        _097_ = a;
    endcase
  endfunction
  assign _003_ = _097_(1'hx, { 1'h0, sdi }, { _040_, _036_ });
  assign _036_ = state == (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *) 3'h3;
  assign _043_ = state == (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *) 3'h4;
  assign _044_ = add_fetch_done ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:110.11-110.33|../src/spi_slave.sv:110.8-118.11" *) serial_buffer[6:0] : 7'h00;
  function [6:0] _101_;
    input [6:0] a;
    input [13:0] b;
    input [1:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _101_ = b[6:0];
      2'b1?:
        _101_ = b[13:7];
      default:
        _101_ = a;
    endcase
  endfunction
  assign _000_ = _101_(7'hxx, { 7'h7f, _044_ }, { _040_, _038_ });
  assign _038_ = state == (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *) 3'h2;
  assign _040_ = ! (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *) state;
  function [15:0] _104_;
    input [15:0] a;
    input [47:0] b;
    input [2:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:179.3-210.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _104_ = b[15:0];
      3'b?1?:
        _104_ = b[31:16];
      3'b1??:
        _104_ = b[47:32];
      default:
        _104_ = a;
    endcase
  endfunction
  assign _005_ = _104_(16'hxxxx, { data_out, serial_buffer[14:0], 1'h0, serial_buffer[14:0], sdi }, { _036_, _042_, _024_ });
  function [3:0] _105_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:179.3-210.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _105_ = b[3:0];
      2'b1?:
        _105_ = b[7:4];
      default:
        _105_ = a;
    endcase
  endfunction
  assign _001_ = _105_(4'hx, { _045_, _007_ }, { _036_, _023_ });
  assign _045_ = _029_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:191.12-191.27|../src/spi_slave.sv:191.8-195.11" *) 4'h0 : _007_;
  function [0:0] _107_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _107_ = b[0:0];
      3'b?1?:
        _107_ = b[1:1];
      3'b1??:
        _107_ = b[2:2];
      default:
        _107_ = a;
    endcase
  endfunction
  assign _002_ = _107_(1'hx, { 1'h0, _050_, _046_ }, { _040_, _036_, _025_ });
  assign _046_ = _009_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:141.11-141.52|../src/spi_slave.sv:141.8-151.11" *) 1'h1 : _051_;
  assign _047_ = _009_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:157.11-157.52|../src/spi_slave.sv:157.8-166.11" *) 3'h0 : 3'h4;
  function [2:0] _110_;
    input [2:0] a;
    input [14:0] b;
    input [4:0] s;
    (* src = "../src/spi_slave.sv:0.0-0.0|../src/spi_slave.sv:89.3-169.10" *)
    (* parallel_case *)
    casez (s)
      5'b????1:
        _110_ = b[2:0];
      5'b???1?:
        _110_ = b[5:3];
      5'b??1??:
        _110_ = b[8:6];
      5'b?1???:
        _110_ = b[11:9];
      5'b1????:
        _110_ = b[14:12];
      default:
        _110_ = a;
    endcase
  endfunction
  assign _006_ = _110_(3'hx, { _039_, _037_, _035_, _048_, _047_ }, { _040_, _038_, _036_, _042_, _043_ });
  assign _048_ = _009_ ? (* full_case = 32'd1 *) (* src = "../src/spi_slave.sv:141.11-141.52|../src/spi_slave.sv:141.8-151.11" *) 3'h0 : 3'h5;
  assign _049_ = csz ? (* src = "../src/spi_slave.sv:104.23-104.42" *) 1'h0 : 1'h1;
  assign _050_ = _029_ ? (* src = "../src/spi_slave.sv:135.23-135.54" *) 1'h0 : 1'h1;
  assign _051_ = _032_ ? (* src = "../src/spi_slave.sv:165.19-165.49" *) 1'h0 : 1'h1;
  assign _052_ = _033_ ? (* src = "../src/spi_slave.sv:185.26-185.54" *) 1'h1 : 1'h0;
  (* module_not_derived = 32'd1 *)
  (* src = "../src/spi_slave.sv:61.12-69.18" *)
  spi_mem smem (
    .add(add),
    .clk(clk),
    .data_in(data_in),
    .data_out(data_out),
    .rstn(reset_n),
    .rwb(rwb)
  );
  assign rstn = reset_n;
endmodule
